# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                           controllers.ApplicationController.index
GET         /signIn                                     controllers.ApplicationController.signIn
GET         /signUp                                     controllers.ApplicationController.signUp
GET         /signOut                                    controllers.ApplicationController.signOut
GET         /authenticate/:provider                     controllers.SocialAuthController.authenticate(provider)
POST        /authenticate/credentials                   controllers.CredentialsAuthController.authenticate
POST        /signUp                                     controllers.SignUpController.signUp

# Home page
GET           /get/Month/:m/:uid                        controllers.QueryController.byMonth(m: Integer, uid: Integer)
GET           /get/Quarter/:m/:uid                      controllers.QueryController.byQuarter(m: Integer, uid: Integer)
GET           /get/Category/:m/:uid                     controllers.QueryController.byCategory(m: Integer, uid: Integer)
GET           /get/Email/:email                         controllers.QueryController.byEmail(email: String)
GET           /get/Username/:username                   controllers.QueryController.byUsername(username: String)
GET           /get/Years/:uid                           controllers.QueryController.byYears(uid: Integer)

GET           /valid/User/:userid/:pwd                  controllers.ValidationController.validateUser(userid: String, pwd: String)
GET           /invalid/User/:sess/:uid                  controllers.ValidationController.invalidateUser(sess: String, uid: Int)
GET           /dumpsess                                 controllers.ValidationController.dumpMap

# create objects
POST          /add/User                                 controllers.CrudController.addUser
POST          /add/Member/:userid                       controllers.CrudController.addMember(userid: Long)
POST          /add/Contact/:userid                      controllers.CrudController.addContact(userid: Long)
POST          /add/Xaction/:userid/:contactid           controllers.CrudController.addTransaction(userid: Long, contactid: Long)

# find entities
GET           /get/User                                 controllers.CrudController.getUser(id: Long = 0)
GET           /get/User/:id                             controllers.CrudController.getUser(id: Long)
GET           /get/Contact/all/:userid                  controllers.CrudController.getContact(id: Long = 0, userid: Long)
GET           /get/Contact/:id/:userid                  controllers.CrudController.getContact(id: Long, userid: Long)
GET           /get/Member/all/:userid                   controllers.CrudController.getMember(id: Long = 0, userid: Long)
GET           /get/Member/:id/:userid                   controllers.CrudController.getMember(id: Long, userid: Long)
GET           /get/Xaction/all/:userid                  controllers.CrudController.getTransactions(id: Long = 0, userid: Long)
GET           /get/Xaction/:id/:userid                  controllers.CrudController.getTransactions(id: Long, userid: Long)

# update existing objects
POST          /update/User/:userid                      controllers.CrudController.updateUser(userid: Long)
POST          /update/Member/:memberid/:userid          controllers.CrudController.updateMember(memberid: Long, userid: Long)
POST          /update/Contact/:contactid/:userid        controllers.CrudController.updateContact(contactid: Long, userid: Long)
POST          /update/Xaction/:xactid/:userid           controllers.CrudController.updateTransaction(xactid: Long, userid: Long)

POST          /uploadFile                               controllers.UploadController.uploadFile

# template download
GET           /get/Template/:tempType                   controllers.XLSController.sendTemplate(tempType: String)

# drop existing objects
DELETE        /drop/User/:userid                        controllers.CrudController.dropUser(userid: Long)
DELETE        /drop/Member/:memberid                    controllers.CrudController.dropMember(memberid: Long)
DELETE        /drop/Contact/:contactid                  controllers.CrudController.dropContact(contactid: Long)
DELETE        /drop/Xaction/:xactid                     controllers.CrudController.dropTransaction(xactid: Long)

# memcached ops
GET           /mem/add/:k/:v                            controllers.CacheController.memadd(k: String, v: String)
GET           /mem/set/:k/:v                            controllers.CacheController.memset(k: String, v: String)
GET           /mem/get/:k                               controllers.CacheController.memget(k: String)
GET           /mem/del/:k                               controllers.CacheController.memdrop(k: String)

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                             controllers.Assets.at(path="/public", file)
GET           /webjars/*file                            controllers.WebJarAssets.at(file)